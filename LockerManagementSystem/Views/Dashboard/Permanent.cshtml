@*@model List<LockerManagementSystem.ViewModels.ReturnViewModel>*@

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    //ViewBag.title = "Dashboard";
}

<ul class="nav nav-pills">

    @ViewBag.datetime
    @ViewBag.Calendar

    <li class="nav-item">
        <a class="nav-link" href="@Url.Action("Index", "Dashboard")">Temporary Locker</a>
    </li>
    &nbsp;
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Permanent Locker
        </a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
            <a class="dropdown-item" href="@Url.Action("Permanent", "Dashboard", new { area = "FOL" })">FOL</a>
            <a class="dropdown-item" href="@Url.Action("Permanent", "Dashboard", new { area = "EOL" })">EOL</a>
            <a class="dropdown-item" href="@Url.Action("Permanent", "Dashboard", new { area = "TESTING" })">TESTING</a>
        </div>
    </li>
</ul>

<hr />

<div class="card ">
    <div class="card-header bg-ifx-berry">

        All released permanent locker 
    </div>
    <div class="card-body">
        <table class="table table-striped table-bordered dt-responsive nowrap" id="table_id" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th style="width:90px;"> Badge ID </th>
                    <th style="width:150px;"> Name </th>
                    <th> Department </th>
                    <th> Designation </th>
                    <th> Gender </th>
                    <th style="width:80px;"> Area </th>
                    <th style="width:80px;"> Site </th>
                    <th style="width:80px;"> Locker </th>
                    <th style="width:80px;"> Key </th>
                    <th style="width:40px;"> Stock </th>
                    <th style="width:80px;"> PIC </th>
                    <th style="width:130px;"> </th>
                </tr>
            </thead>
        </table>
    </div>
</div>


<!-- Modal -->
<div class="modal" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
</div>

@section Scripts {


    @Styles.Render("~/Content/datatable")
    @Scripts.Render("~/bundles/datatable")

<script>
        $(document).ready(function () {

            $("#table_id").DataTable({
                'dom': 'Bfrtip',
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "pageLength": 10,
                'buttons': [
                    {
                        "extend": 'excel',
                        "text": 'Export',
                        "titleAttr": 'Excel',
                        "action": newexportaction,
                        "columns": ':visible'
                    },
                    {
                        text: 'Export with Detail',
                        action: function (e, dt, node, config) {
                            window.location.href = '@Url.Action("ExportDetail", "Dashboard")' + '/?area=' + '@ViewBag.area'
                        }
                    }

                ],
                "ajax": {
                    "url": "@Url.Action("LoadPermanent", "Dashboard")",
                    data: { area: '@ViewBag.area'},
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs":
                    [{
                        "targets": [11],
                        "searchable": false,
                        "orderable": false
                    },
                    {
                        "targets": [2],
                        "visible": false
                    },
                    {
                        "targets": [3],
                        "visible": false
                    }, {
                        "targets": [4],
                        "visible": false
                    },
                ],
                "columns": [
                    { "data": "BadgeId", "name": "BadgeId", "autoWidth": true },
                    { "data": "Name", "name": "Name", "autoWidth": true },
                    { "data": "Department", "name": "Department", "autoWidth": true },
                    { "data": "Designation", "name": "Designation", "autoWidth": true },
                    { "data": "EmployeeGender", "name": "EmployeeGender", "autoWidth": true },
                    { "data": "Area", "title": "Area", "name": "Area", "autoWidth": true },
                    { "data": "Site", "name": "Site", "autoWidth": true },
                    { "data": "LockerNunmber", "name": "LockerNunmber", "autoWidth": true },
                    { "data": "KeyNumber", "name": "KeyNumber", "autoWidth": true },
                    { "data": "stock", "name": "stock", "title": "stock", "autoWidth": true },
                    { "data": "PIC", "name": "PIC", "title": "PIC", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            return '<div class="dropdown"  style="float:left">' +
                                '<button class="btn btn-success dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">' +
                                '<i class="fas fa-exchange-alt"></i></button><div class="dropdown-menu" aria-labelledby="dropdownMenuButton">' +
                                '<a class="dropdown-item" onclick="showProcess(' + full.TransactionId + ')" href="#">Change new locker</a>' +
                                '<a class="dropdown-item" onclick="showProcess2(' + full.TransactionId + ')">Change with friend</a></div></div> &nbsp;' +
                                '<button type="button" class="btn btn-warning"  onclick="returnRequest(' + full.TransactionId + ')" id="submitBtn">Return</button>';
                        }
                    }
                ]

            });

        });

        function returnRequest(id) {
            if (confirm('Are you sure want to return?')) {
              $.ajax({
                type: "GET",
                url: "@Url.Action("ReturnRequest", "Return")",
                data: { Remark: '', TransactionId: id },
                cache:false,
                beforeSend: function () {
                    $('#loading').show();
                },
                 success: function (jsReturnArgs) {
                    $('#table_id').DataTable().ajax.reload();
                    $('#loading').hide();
                },
                 error: function (errorData) {
                     console.log("Error");
                     console.log(errorData);
                 }
            });
            } else {

            }
        }

        function showProcess(id) {
             $.ajax({
                type: "GET",
                url: "@Url.Action("ChangeNewLocker", "Release")",
                data: { transactionId: id },
                cache:false,
                beforeSend: function () {
                    $('#loading').show();
                },
                success: function (jsReturnArgs) {
                    $('#loading').hide();
                    if (jsReturnArgs) {
                        $("#exampleModal").html(jsReturnArgs);
                        $('#exampleModal').modal('show');
                    }
                },

                 error: function (errorData) {
                     console.log("Error");
                     console.log(errorData);
                 },
                 complete: function (data) {
                     bindLocker();
                 }
            });
        }

        function bindLocker() {
            var type = $("#TransactionType").val();
            var area = $("#AreaId").val();
            var site = $("#Site").val();
            $.ajax({
                type: "GET",
                url: "@Url.Action("UpdateLocker", "Request")",
                data: { type: type, area : area, site : site},
                cache: false,
                beforeSend: function () {
                    $("#loading").show();
                    $("#OptionalLockerNumber").empty();
                },
                success: function (jsReturnArgs) {
                    $('<option>').val("").text("--Select Locker--").appendTo("#OptionalLockerNumber");
                    $.each(jsReturnArgs, function (index, value) {
                        $('<option>').val(value.Value).text(value.Text).appendTo("#OptionalLockerNumber");
                    })
                },
                error: function (errorData) {
                    console.log(errorData);
                },
                complete: function (data) {
                    $("#loading").hide();
                    $("#lockerNumberDiv").show();
                }
            });
        }

        function releaseDefault() {
            var transactionId = $("#TransactionId").val();
            var lockerId = $("#OptionalLockerNumber").val();

            if (lockerId == null || lockerId == '') {
                alert("Please select locker!");
            } else {
                  $.ajax({
                    type: "POST",
                    url: "@Url.Action("ChangeNewLocker", "Release")",
                      data: { transactionId: transactionId, lockerId: lockerId},
                    cache: false,
                    beforeSend: function () {
                        $("#loading").show();
                    },
                    success: function (jsReturnArgs) {
                        if (jsReturnArgs == "success") {
                            successAlert();
                        } else {
                            failAlert();
                        }
                    },
                    error: function (errorData) {
                        console.log(errorData);
                    },
                    complete: function (data) {
                        $("#loading").hide();
                        $('#exampleModal').modal('hide');
                        $('#table_id').DataTable().ajax.reload();
                    }
                });
            }
        };


        function showProcess2(id) {
             $.ajax({
                type: "GET",
                url: "@Url.Action("ChangeWithFriend", "Release")",
                data: { transactionId: id },
                cache:false,
                beforeSend: function () {
                    $('#loading').show();
                },
                success: function (jsReturnArgs) {
                    $('#loading').hide();
                    if (jsReturnArgs) {
                        $("#exampleModal").html(jsReturnArgs);
                        $('#exampleModal').modal('show');
                    }
                },

                 error: function (errorData) {
                     console.log("Error");
                     console.log(errorData);
                 },
                 complete: function (data) {
                     bindLocker();
                 }
            });
        }



</script>
}
